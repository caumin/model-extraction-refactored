# PRADA MNIST Experiment Configuration
run_dir: runs/prada_mnist_experiment
seed: 42
device: cuda # or cpu

logging:
  log: prada_mnist_experiment.log
  log_level: INFO

victim:
  arch: prada_mnist_target
  ckpt: ckpts/prada_mnist_target.pt
  num_classes: 10
  in_channels: 1

student:
  arch: prada_sub_cnn2 # Using prada_sub_cnn2 as a common substitute model
  num_classes: 10
  in_channels: 1
  dropout_rate: 0.0 # Default to 0.0 for fixed-hyperparameter PRADA

query:
  dataset: mnist
  data_dir: data/
  batch_size: 128
  img_size: 28

attack:
  name: prada
  label_only: True # Assuming label-only queries for PRADA
  prada:
    rounds: 10 # 10 rounds for 1024x increase
    lambda_aug: 0.1 # Step size for adversarial example generation (e.g., JbDA)
    epochs: 10 # Epochs to train student per round
    batch_size: 128 # Batch size for student training
    lr: 0.01 # Learning rate for student training
    reservoir: null # Disable reservoir for strict doubling
    crafter: jbda # Initial crafter, can be fgsm, ifgsm, mifgsm, color, jsma
    target_policy: next # Policy for selecting target labels for adversarial examples
    jsma_k: 32 # K for JSMA
    pn_targeted: False # Targeted attack for FGSM family
    pn_steps: 1 # Steps for iterative FGSM (1 for FGSM, >1 for I-FGSM, MI-FGSM)
    pn_momentum: 0.9 # Momentum for MI-FGSM
    pn_eps: 0.25 # Epsilon for FGSM family (64/255)
    query_budget: 102400 # Total query budget
    optimizer_type: sgd # Optimizer for student training (adam or sgd)
    optimizer_params:
      momentum: 0.9
    seed_per_class: 10 # Initial seed samples per class (10 classes * 10 samples = 100 initial queries)
